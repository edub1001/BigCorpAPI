# Node.js Express Web App to Linux on Azure
# Build a Node.js Express app and deploy it to Azure as a Linux web app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- releases/*

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'd9e61b48-8986-48e3-8658-8a73c0709094'
  
  # Web app name
  webAppName: 'BigCorpAPI'
  
  # Environment name
  environmentName: 'BigCorpAPI'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
      
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - script: |
        npm install
        npm run build --if-present
        npm run coverageunit --if-present
      displayName: 'npm install, build and test'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publishing coverage'
      inputs:
        codeCoverageTool: 'Cobertura'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'

      # Prune dev dependencies
    - script: npm prune --production
      displayName: "Prune dev dependencies"
      
    - task: CopyFiles@2
      displayName: 'Copy prod node_modules files'
      inputs:        
        SourceFolder: '$(System.DefaultWorkingDirectory)/node_modules'
        Contents: '**'
        TargetFolder: '$(System.DefaultWorkingDirectory)/dist/node_modules'
        CleanTargetFolder: true
        OverWrite: true

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:            
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: BigCorpAPI'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              runtimeStack: 'NODE|10.10'
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
              startUpCommand: 'npm run prodstart'